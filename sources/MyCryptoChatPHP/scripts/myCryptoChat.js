function sendMessage() { if ($.trim($("#userName").val()) == "") { alert("Please choose a name!") } else if (pageKey() == "" || pageKey() == "=") { alert("The key is missing (the part of the website url after '#').") } else { if ($.trim($("#textMessage").val()) != "") { var e = pageKey(); $.post("sendMessage.php", { roomId: roomId, user: zeroCipher(e, $.trim($("#userName").val())), message: zeroCipher(e, $.trim($("#textMessage").val())) }, function (e) { if (e != false) { $("#textMessage").val(""); $("#textMessage").focus(); getMessages(false) } else { alert("An error occured... :(") } }) } } } function getMessages(e) { var t = pageKey(); $.post("getMessages.php", { roomId: roomId, dateLastGetMessages: dateLastGetMessages, nbIps: nbIps }, function (n) { if (n == "noRoom") { $("#chatroom").html("<i>This conversation is over... You should start a new one to keep talking!</i>"); stopTimerCheck() } else if (n == "destroyed") { $("#chatroom").html("<i>This conversation self-destroyed. It was only created for one visitor.</i>"); stopTimerCheck() } else if (n != "noNew") { if (n.chatLines == undefined) { $("#nbUsers").html(n.nbIps) } else if (n.chatLines == "") { if (t == "" || t == "=") { document.location.hash = "#" + sjcl.codec.base64.fromBits(sjcl.random.randomWords(8, 0), 0) } $("#chatroom").html("<i>No messages yet...</i>") } else if (t == "" || t == "=") { $("#chatroom").html("<i>The key is missing (the part of the website url after '#').</i>"); stopTimerCheck() } else { var r = false; var s = false; var o = $("#chatroom"); o.html(""); nbIps = n.nbIps; $("#nbUsers").html(n.nbIps); for (i = 0; i < n.chatLines.length; i++) { try { var u = zeroDecipher(t, n.chatLines[i].userId); var a = zeroDecipher(t, n.chatLines[i].message); s = true; if (vizhash.supportCanvas()) { var f = vizhash.canvasHash(n.chatLines[i].hash, 15, 10); o.append("<span class='chathour'>(" + getDateFromTimestamp(n.chatLines[i].date) + ")</span> "); o.append(f.canvas); o.append(" <b>" + htmlEncode(u) + "</b> : " + replaceUrlTextWithUrl(htmlEncode(a)) + "<br />") } else { o.append("<i>" + n.chatLines[i].date + "</i> - <b>" + htmlEncode(u) + "</b> : " + replaceUrlTextWithUrl(htmlEncode(a)) + "<br />") } } catch (l) { r = true } } if (!s && r) { $("#chatroom").html("The key seems to be corrupted. Are you sure that you copied the full URL (with #xxxxxxxxxxxxxxxx-xxxxxxx-xxxxxxxx) ?"); stopTimerCheck() } else { var c = document.getElementById("chatroom"); c.scrollTop = c.scrollHeight; dateLastGetMessages = n.dateLastGetMessages; if (e && !isRefreshTitle) { refreshTitleInterval = setInterval(function () { if (document.title == "Private chat room - MyCryptoChat by HowTommy.net") { document.title = "New messages ! - MyCryptoChat by HowTommy.net" } else { document.title = "Private chat room - MyCryptoChat by HowTommy.net" } }, 3e3); isRefreshTitle = true } } } } }) } function replaceUrlTextWithUrl(e) { var t = /((http|https|ftp):\/\/[\w?=&.\/-;#@~%+-]+(?![\w\s?&.\/;#~%"=-]*>))/ig; e = e.replace(t, '<a href="$1" rel="nofollow">$1</a>'); t = /((magnet):[\w?=&.\/-;#@~%+-]+)/ig; e = e.replace(t, '<a href="$1">$1</a>'); return e } function stopRefreshTitle() { if (isRefreshTitle) { clearInterval(refreshTitleInterval); document.title = "Private chat room - MyCryptoChat by HowTommy.net"; isRefreshTitle = false } } function htmlEncode(e) { return $("<div/>").text(e).html() } function stopTimerCheck() { clearInterval(checkIntervalTimer) } function getDateFromTimestamp(e) { var e = new Date(e * 1e3); var t = e.getHours(); var n = e.getMinutes(); t = t > 9 ? t : "0" + t; n = n > 9 ? n : "0" + n; return t + ":" + n } var isRefreshTitle = false; var refreshTitleInterval; var nbIps = 1; var checkIntervalTimer; $(function () { getMessages(false); checkIntervalTimer = setInterval("getMessages(true)", 15e3); $("body").on("mousemove", stopRefreshTitle) })